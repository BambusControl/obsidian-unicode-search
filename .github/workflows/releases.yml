name: Release Obsidian plugin

on:
  push:
    tags:
      - "test[0-9]+.[0-9]+.[0-9]+"

env:
  PLUGIN_NAME: "obsidian-unicode-search"
  BUILD_DIR: "./dist"
  RELEASE_VERSION: ${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: NPM Install and build
        run: |
          npm clean-install
          npm run build --if-present

      - name: ZIP build output
        working-directory: ${{ env.BUILD_DIR }}
        run: |
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload manifest
        uses: actions/upload-release-asset@v1
        working-directory: ${{ env.BUILD_DIR }}/${{ env.PLUGIN_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json

      - name: Upload script
        uses: actions/upload-release-asset@v1
        working-directory: ${{ env.BUILD_DIR }}/${{ env.PLUGIN_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.js
          asset_name: main.js
          asset_content_type: text/javascript

      - name: Upload stylesheet
        uses: actions/upload-release-asset@v1
        working-directory: ${{ env.BUILD_DIR }}/${{ env.PLUGIN_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./styles.css
          asset_name: styles.css
          asset_content_type: text/css

      - name: Upload archive
        uses: actions/upload-release-asset@v1
        working-directory: ${{ env.BUILD_DIR }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.PLUGIN_NAME }}.zip
          asset_name: ${{ env.PLUGIN_NAME }}-${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
